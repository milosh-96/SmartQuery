@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

    <div class="add-value d-md-flex" style="align-items:center">
    <div class="w-100 md-w-20">Build a Query</div>
        <input id="value-input" class="form-control rounded-0 w-100 md-w-60" type="text" value="" name="value" placeholder="Enter a value" />
        <button class="btn btn-secondary w-100 md-w-20" onclick="entrySearch.addValue()">Add</button>
    </div>
<form asp-page="/Entries/Search" method="get">
    <hr />
    <div class="query-builder d-md-flex">
        <ul class="list-group list-group-horizontal mb-2 md-mb-0 md-w-50 w-100">
            
        </ul>
        
        <input id="query-input" type="hidden" name="query" />
        <select title="Set the search mode, display only items that have all entered values (AND) or at least one of the set values (OR)." class="form-control md-w-25 w-100" name="mode" >
            <option value="0">OR</option>
            <option selected value="1">AND</option>
        </select>
        <button class="btn btn-primary md-w-25 w-100" type="submit">Search</button>
    </div>
    
</form>
<script>
    document.addEventListener("DOMContentLoaded",function() {
        $(document).contextmenu(function (e) {
            //event.preventDefault();
            //alert("i'm a lame web site that doesn't allow right click!");
        });
    });
    window.entrySearch = {
        query:[],
        addValue:function(){
            var currentInput = $("#value-input").val();
            if(currentInput != ""){
                $(".query-builder > ul").append('<li class="value list-group-item" onclick="entrySearch.removeValue(this)">' + currentInput + '</li>');
                entrySearch.query.push(currentInput);
                $("#value-input").val('');
                $("#query-input").val(entrySearch.query.join(","));

            }
            else {
                alert("Enter something.");
            }
        },
        removeValue:function (el) {
            itemIndex = entrySearch.query.indexOf(el.innerText);
            entrySearch.query.splice(itemIndex,1);
            $("#query-input").val(entrySearch.query.join(","));
            el.remove();
        }
    }
   
    
</script>